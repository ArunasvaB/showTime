{"version":3,"sources":["Navbar.js","data.js","App.js","Error.js","Artist.js","Reviews.js","index.js"],"names":["styles","makeStyles","tool","padding","display","alignItems","Navbar","language","setLanguage","classes","history","useHistory","AppBar","position","Toolbar","className","variant","Tabs","Tab","value","label","onClick","push","RadioGroup","row","aria-label","name","onChange","event","target","FormControlLabel","control","Radio","arrays","images","names","descriptions","songs","genre","urls","reviewer","reviews","ratings","App","useState","Typography","align","Error","artistImages","width","height","root","flexGrow","Artists","setGenre","currentGenre","Divider","map","i","key","Grid","container","xs","spacing","item","src","alt","url","Button","color","Reviews","React","open","setOpen","review","setReview","window","location","pathname","substring","indx","indexOf","handleClose","reason","exact","path","justify","TextField","id","multiline","rows","e","Rating","Snackbar","autoHideDuration","onClose","Alert","severity","ReactDOM","render","Artist","document","getElementById"],"mappings":"gRAWMA,EAASC,KAAW,iBAAO,CAC7BC,KAAM,CACFC,QAAS,IACTC,QAAS,OACTC,WAAY,qBAiCLC,MA3Bf,YAA0C,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,YAEvBC,EAAUT,IAEJU,EAAUC,cAChB,OACI,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,CAASC,UAAWN,EAAQP,KAAMc,QAAQ,SAC1C,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,MAAM,OAAOC,MAAM,OAAOC,QAAS,kBAAMX,EAAQY,KAAK,QAC3D,kBAACJ,EAAA,EAAD,CAAKC,MAAM,UAAUC,MAAM,UAAUC,QAAS,kBAAMX,EAAQY,KAAK,gBAGjE,kBAACC,EAAA,EAAD,CACIC,KAAG,EACHC,aAAW,QAAQC,KAAK,QAAQP,MAAOZ,EACvCoB,SAAU,SAACC,GAAD,OAAWpB,EAAYoB,EAAMC,OAAOV,SAE9C,kBAACW,EAAA,EAAD,CAAkBX,MAAM,UAAUY,QAAS,kBAACC,EAAA,EAAD,MAAUZ,MAAM,OAC3D,kBAACU,EAAA,EAAD,CAAkBX,MAAM,SAASY,QAAS,kBAACC,EAAA,EAAD,MAAUZ,MAAM,W,SCpB3Da,EAlBf,CACIC,OAAO,CAAC,qFAAqF,uDAAuD,qHAAqH,0FAA0F,wRACnWC,MAAM,CAAC,aAAa,gBAAgB,cAAc,SAAS,eAC3DC,aAAa,CAAC,8CAA8C,4CAA4C,8DAA8D,uCAAuC,8BAC7MC,MAAM,CAAC,8CAA8C,8CAA8C,8CAA8C,+BAA+B,gCAChLC,MAAM,CAAC,SAAS,OAAO,OAAO,MAAM,QACpCC,KAAK,CAAC,QAAQ,UAAU,QAAQ,SAAS,WACzCC,SAAS,CAAC,CAAC,cAAc,gBAAgB,CAAC,SAAS,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,WAClGC,QAAQ,CAAC,CAAC,yEAAyE,+FAC/E,CAAC,6CACD,CAAC,gDACD,CAAC,yCACD,CAAC,mCAAmC,4CAExCC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,KCUvBC,MArBf,WAAgB,IAAD,EAEgBC,mBAAS,WAFzB,mBAENrC,EAFM,KAEGC,EAFH,KAIb,OAEA,kBAAC,WAAD,KAEE,kBAAC,EAAD,CAAQD,SAAUA,EAAUC,YAAaA,IACzC,kBAACqC,EAAA,EAAD,CAAYC,MAAM,SAAS9B,QAAQ,MAAnC,mBAEA,kBAAC6B,EAAA,EAAD,KACgB,YAAbtC,EAAyB,mKAAqK,+N,QCNtLwC,MARf,WAEI,OAEI,kBAAC,WAAD,e,4CCOF/C,EAASC,KAAW,iBAAO,CAC7B+C,aACI,CACIC,MAAO,MACPC,OAAQ,QAGhBC,KACI,CACIC,SAAU,SAwFPC,MAlFf,WAAoB,IAAD,EACcT,mBAAS,WADvB,mBACRrC,EADQ,KACCC,EADD,KAETE,EAAUC,cAFD,EAIWiC,mBAAS,OAJpB,mBAIRN,EAJQ,KAIDgB,EAJC,KAYT7C,EAAUT,IAChB,OAGI,kBAAC,WAAD,KAGI,kBAAC,EAAD,CAAQO,SAAUA,EAAUC,YAAaA,IAGzC,kBAACqC,EAAA,EAAD,CAAYC,MAAM,SAAS9B,QAAQ,MAAnC,gBAEA,6BACA,kBAAC6B,EAAA,EAAD,qBACA,kBAACtB,EAAA,EAAD,CACIE,aAAW,QAAQC,KAAK,QAAQP,MAAOmB,EACvCX,SAAU,SAACC,GAAD,OArBN2B,EAqBwB3B,EAAMC,OAAOV,WApBjDmC,EAASC,GADb,IAAgBA,IAuBJ,kBAACzB,EAAA,EAAD,CAAkBX,MAAM,MAAMY,QAAS,kBAACC,EAAA,EAAD,MAAUZ,MAAM,QACvD,kBAACU,EAAA,EAAD,CAAkBX,MAAM,OAAOY,QAAS,kBAACC,EAAA,EAAD,MAAUZ,MAAM,SACxD,kBAACU,EAAA,EAAD,CAAkBX,MAAM,MAAMY,QAAS,kBAACC,EAAA,EAAD,MAAUZ,MAAM,QACvD,kBAACU,EAAA,EAAD,CAAkBX,MAAM,OAAOY,QAAS,kBAACC,EAAA,EAAD,MAAUZ,MAAM,SACxD,kBAACU,EAAA,EAAD,CAAkBX,MAAM,SAASY,QAAS,kBAACC,EAAA,EAAD,MAAUZ,MAAM,aAE9D,6BACA,kBAACoC,EAAA,EAAD,MAECvB,EAAOE,MAAMsB,KAAI,SAAC/B,EAAMgC,GACjB,GAAIzB,EAAOK,MAAMoB,KAAOpB,GAAmB,QAAVA,EAE7B,OACI,kBAAC,WAAD,CAAUqB,IAAKD,GAGX,kBAACb,EAAA,EAAD,CAAYC,MAAM,UAAUpB,GAC5B,yBAAKX,UAAWN,EAAQ0C,MACpB,kBAACS,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIC,QAAS,GAE7B,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACF,GAAI,GACX,yBAAKG,IAAKhC,EAAOC,OAAOwB,GAAIQ,IAAKxC,EAAMX,UAAWN,EAAQuC,gBAG9D,kBAACY,EAAA,EAAD,CAAMI,MAAI,EAACF,GAAI,GACX,kBAACjB,EAAA,EAAD,CAAYC,MAAM,UAAUb,EAAOG,aAAasB,KAKpD,kBAACE,EAAA,EAAD,CAAMI,MAAI,EAACF,GAAI,GACX,kBAAC,IAAD,CAAaK,IAAKlC,EAAOI,MAAMqB,GAAIT,MAAM,MAAMC,OAAO,SACtD,kBAACkB,EAAA,EAAD,CAAQ/C,QAAS,kBAAMX,EAAQY,KAAK,YAAYW,EAAOM,KAAKmB,KAAK1C,QAAQ,YAAYqD,MAAM,WAA3F,cAIZ,kBAACb,EAAA,EAAD,Y,oCCjF1BxD,EAASC,KAAW,iBAAO,CAC7B+C,aACI,CACIC,MAAO,MACPC,OAAQ,YAgFLoB,MAzEf,WAAoB,IAAD,EACc1B,mBAAS,WADvB,mBACRrC,EADQ,KACCC,EADD,OAES+D,IAAM3B,UAAS,GAFxB,mBAER4B,EAFQ,KAEFC,EAFE,OAGY7B,mBAAS,IAHrB,mBAGR8B,EAHQ,KAGDC,EAHC,KAITlE,EAAUT,IACZmE,EAAMS,OAAOC,SAASC,SAC1BX,EAAMA,EAAIY,UAAU,GACpB,IAAIC,EAAO/C,EAAOM,KAAK0C,QAAQd,GAEzBe,EAAc,SAACtD,EAAOuD,GACT,cAAXA,GAIJV,GAAQ,IAKZ,OAGQ,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAM,YAAclB,GAC7B,kBAAC,EAAD,CAAQ5D,SAAUA,EAAUC,YAAaA,IACzC,kBAACoD,EAAA,EAAD,CAAMC,WAAS,EAACyB,QAAQ,UACxB,yBAAKrB,IAAKhC,EAAOC,OAAO8C,GAAOjE,UAAWN,EAAQuC,aAAckB,IAAI,sBAGpE,6BACA,kBAACrB,EAAA,EAAD,CAAYC,MAAM,UAAUb,EAAOE,MAAM6C,IACzC,kBAACO,EAAA,EAAD,CACIC,GAAG,4BACHpE,MAAM,oBACNqE,WAAS,EACTpB,MAAM,YACNqB,KAAM,EACN1E,QAAQ,WACRG,MAAOuD,EACP/C,SAAU,SAAAgE,GAAC,OAAIhB,EAAUgB,EAAE9D,OAAOV,UAEtC,6BACA,kBAACyE,EAAA,EAAD,MACA,6BACA,kBAACxB,EAAA,EAAD,CAAQpD,QAAQ,YAAYqD,MAAM,UAAUhD,QA3BpC,WAChBoD,GAAQ,KA0BA,UAEA,kBAACoB,EAAA,EAAD,CAAUrB,KAAMA,EAAMsB,iBAAkB,IAAMC,QAASb,GACnD,kBAACc,EAAA,EAAD,CAAOD,QAASb,EAAae,SAAS,WAAtC,qFAMHhE,EAAOO,SAASwC,GAAMvB,KAAI,SAAC/B,EAAKgC,GAEzB,OACI,kBAAC,WAAD,CAAUC,IAAMD,GACZ,kBAACF,EAAA,EAAD,MACA,kBAACX,EAAA,EAAD,KAAanB,GACb,6BACA,kBAACmB,EAAA,EAAD,KAAaZ,EAAOQ,QAAQuC,GAAMtB,IAClC,6BACA,kBAACkC,EAAA,EAAD,CAAQzE,MAAOc,EAAOS,QAAQsC,GAAMtB,WC7EpEwC,IAASC,OAEL,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOf,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aACd,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YACd,kBAACe,EAAD,OAGJ,kBAAC,IAAD,CAAOf,KAAK,YACR,kBAAC,EAAD,OAGJ,kBAAC,IAAD,CAAOA,KAAK,KACR,kBAAC,EAAD,SAWdgB,SAASC,eAAe,W","file":"static/js/main.3462ea3c.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\n\r\nconst styles = makeStyles(() => ({\r\n    tool: {\r\n        padding: \"0\",\r\n        display: \"flex\",\r\n        alignItems: \"space-between\"\r\n    }\r\n\r\n}));\r\n\r\n\r\nfunction Navbar({language, setLanguage}) {\r\n\r\nlet classes = styles();\r\n\r\n    const history = useHistory();\r\n    return (\r\n        <AppBar position=\"sticky\">\r\n            <Toolbar className={classes.tool} variant=\"dense\">\r\n            <Tabs>\r\n                <Tab value=\"home\" label=\"Home\" onClick={() => history.push(\"/\")}/>\r\n                <Tab value=\"artists\" label=\"Artists\" onClick={() => history.push(\"/artists\")}/>\r\n\r\n            </Tabs>\r\n                <RadioGroup\r\n                    row\r\n                    aria-label=\"genre\" name=\"genre\" value={language}\r\n                    onChange={(event) => setLanguage(event.target.value)}\r\n                >\r\n                    <FormControlLabel value=\"english\" control={<Radio/>} label=\"EN\"/>\r\n                    <FormControlLabel value=\"french\" control={<Radio/>} label=\"FR\"/>\r\n                </RadioGroup>\r\n                </Toolbar>\r\n        </AppBar>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","let arrays=\r\n\r\n    {\r\n        images:[\"https://thepitchkc.com/content/uploads/2019/08/DSC_9485.5cf563e7c13c7-1024x683.png\",\"https://i.ytimg.com/vi/fEyfl_SR4E4/maxresdefault.jpg\",\"https://www.nme.com/wp-content/uploads/2016/09/2016_20_DAVIDBOWIEQUOTES_GettyImages-112341178_120116-1-696x462.jpg\",\"https://thedailyaztec.com/wp-content/uploads/2018/11/Michael_Abshear_Clairo_7_color.jpg\",\"https://ca-times.brightspotcdn.com/dims4/default/b6415c1/2147483647/strip/true/crop/4000x2667+0+0/resize/840x560!/quality/90/?url=https%3A%2F%2Fcalifornia-times-brightspot.s3.amazonaws.com%2Fca%2F3c%2Fb44836ff4248a4c286edcbf10807%2Fla-et-julian-casablancas-gettyimages-506.JPG\"],\r\n        names:[\"Juice Wrld\",\"Michael Buble\",\"David Bowie\",\"Clairo\",\"The Strokes\"],\r\n        descriptions:[\"Emo rap prodigy. Works well with any crowd \",\"Canadian crooner jazz revivalist legend. \",\"Avant garde artist who shaped pop culture like never before\",\" Rising star and bedroom pop artist.\",\"Revenants of Rock and Roll\"],\r\n        songs:[\"https://www.youtube.com/watch?v=ZengOKCUBHo\",\"https://www.youtube.com/watch?v=KCD_eosS1L0\",\"https://www.youtube.com/watch?v=ZZ-Ke2uOH6g\",\"https://youtu.be/L9HYJbe9Y18\",\"https://youtu.be/BXkm6h6uq0k\"],\r\n        genre:[\"hiphop\",\"jazz\",\"rock\",\"pop\",\"rock\"],\r\n        urls:[\"juice\",\"michael\",\"bowie\",\"clairo\",\"strokes\"],\r\n        reviewer:[[\"Ben Shapiro\",\"Donald Trump\"],[\"Karen\"],[\"Joe Biden\"],[\"Jordan Peterson\"],[\"Elon Musk\",\"Bernie\"]],\r\n        reviews:[[\"let us assume for the sake of argument this is the greatest music ever\",\"it's huge, it's tremendous, the most tremendous music ever made, i have many black friends!\"],\r\n            [\"I want to speak to the manager, terrible.\"],\r\n            [\"the uh the uh, you know? greatest music ever\"],\r\n            [\"the music is a metaphor for suffering\"],\r\n            [\"funding secured to buy the music\",\"music for everybody and not just the 1%\"]\r\n            ],\r\n        ratings:[[5,5],[1],[4],[2],[5,4]]\r\n\r\n    }\r\n\r\n    export default arrays;","import React, {Fragment, useState} from 'react';\nimport Navbar from './Navbar';\nimport Typography from \"@material-ui/core/Typography\";\nimport arrays from \"./data\";\n\nfunction App() {\n\n  const [language,setLanguage]=useState(\"english\");\n\n  return (\n\n  <Fragment>\n\n    <Navbar language={language} setLanguage={setLanguage}/>\n    <Typography align=\"center\" variant=\"h2\">Showtime By Ash</Typography>\n\n    <Typography>\n      {language === \"english\" ? \"  Welcome to the most amazing music streaming site ! Click on Artists to browse artists, listen to samples of their music and read or leave reviews for others !\" : \"Bonjour mon frere ! Sur le site de streaming de musique le plus incroyable ! Cliquez sur Artistes pour parcourir les artistes, écouter des extraits de leur musique et lire ou laisser des critiques pour les autres !\"}\n\n    </Typography>\n\n\n  </Fragment>\n  )\n}\n\nexport default App;\n","import React, {Fragment} from 'react';\r\n\r\n\r\nfunction Error()\r\n{\r\n    return(\r\n\r\n        <Fragment>Error</Fragment>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport Navbar from './Navbar';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport arrays from \"./data\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst styles = makeStyles(() => ({\r\n    artistImages:\r\n        {\r\n            width: \"80%\",\r\n            height: \"auto\",\r\n\r\n        },\r\n    root:\r\n        {\r\n            flexGrow: \"1\"\r\n        }\r\n\r\n}));\r\n\r\n\r\nfunction Artists() {\r\n    const [language,setLanguage]=useState(\"english\");\r\n    const history = useHistory();\r\n\r\n    const [genre, setGenre] = useState(\"any\")\r\n\r\n\r\n    function filter(currentGenre) {\r\n        setGenre(currentGenre);\r\n    }\r\n\r\n\r\n    const classes = styles();\r\n    return (\r\n\r\n\r\n        <Fragment>\r\n\r\n\r\n            <Navbar language={language} setLanguage={setLanguage}/>\r\n\r\n\r\n            <Typography align=\"center\" variant=\"h2\">Pick Artists</Typography>\r\n\r\n            <br/>\r\n            <Typography>Choose Genre</Typography>\r\n            <RadioGroup\r\n                aria-label=\"genre\" name=\"genre\" value={genre}\r\n                onChange={(event) => filter(event.target.value)}\r\n            >\r\n                <FormControlLabel value=\"any\" control={<Radio/>} label=\"Any\"/>\r\n                <FormControlLabel value=\"rock\" control={<Radio/>} label=\"Rock\"/>\r\n                <FormControlLabel value=\"pop\" control={<Radio/>} label=\"Pop\"/>\r\n                <FormControlLabel value=\"jazz\" control={<Radio/>} label=\"Jazz\"/>\r\n                <FormControlLabel value=\"hiphop\" control={<Radio/>} label=\"Hip-Hop\"/>\r\n            </RadioGroup>\r\n            <br/>\r\n            <Divider/>\r\n\r\n            {arrays.names.map((name, i) => {\r\n                    if (arrays.genre[i] === genre || genre === \"any\") {\r\n\r\n                        return (\r\n                            <Fragment key={i}>\r\n\r\n\r\n                                <Typography align=\"center\">{name}</Typography>\r\n                                <div className={classes.root}>\r\n                                    <Grid container xs={12} spacing={3}>\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <img src={arrays.images[i]} alt={name} className={classes.artistImages}/>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <Typography align=\"center\">{arrays.descriptions[i]}</Typography>\r\n\r\n                                        </Grid>\r\n\r\n\r\n                                        <Grid item xs={4}>\r\n                                            <ReactPlayer url={arrays.songs[i]} width=\"80%\" height=\"auto\"/>\r\n                                            <Button onClick={() => history.push(\"/artists/\"+arrays.urls[i])} variant=\"contained\" color=\"primary\">Reviews</Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <Divider/>\r\n\r\n\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                }\r\n            )\r\n            }\r\n\r\n        </Fragment>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Artists;\r\n","import React, {Fragment, useState} from 'react';\r\nimport arrays from \"./data\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst styles = makeStyles(() => ({\r\n    artistImages:\r\n        {\r\n            width: \"40%\",\r\n            height: \"auto\"\r\n        },\r\n\r\n\r\n}));\r\n\r\n\r\nfunction Reviews() {\r\n    const [language,setLanguage]=useState(\"english\");\r\n    const [open, setOpen] = React.useState(false);\r\n    const [review,setReview] = useState(\"\");\r\n    const classes = styles();\r\n    let url = window.location.pathname\r\n    url = url.substring(9);\r\n    let indx = arrays.urls.indexOf(url);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n    return (\r\n\r\n\r\n            <Route exact path={\"/artists/\" + url}>\r\n                <Navbar language={language} setLanguage={setLanguage}/>\r\n                <Grid container justify=\"center\">\r\n                <img src={arrays.images[indx]} className={classes.artistImages} alt=\"OG Gangsta Squad\"/>\r\n                </Grid>\r\n\r\n                <br/>\r\n                <Typography align=\"center\">{arrays.names[indx]}</Typography>\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Enter your review\"\r\n                    multiline\r\n                    color=\"secondary\"\r\n                    rows={5}\r\n                    variant=\"outlined\"\r\n                    value={review}\r\n                    onChange={e => setReview(e.target.value)}\r\n                />\r\n                <br/>\r\n                <Rating/>\r\n                <br/>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Submit\r\n                </Button>\r\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                        Your review has been submitted ! Our moderators will check it and then post it !\r\n                    </Alert>\r\n                </Snackbar>\r\n\r\n\r\n                {arrays.reviewer[indx].map((name,i)=>\r\n                    {\r\n                        return(\r\n                            <Fragment key ={i}>\r\n                                <Divider/>\r\n                                <Typography>{name}</Typography>\r\n                                <br/>\r\n                                <Typography>{arrays.reviews[indx][i]}</Typography>\r\n                                <br/>\r\n                                <Rating value={arrays.ratings[indx][i]}/>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                )}\r\n\r\n            </Route>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Reviews;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Error from \"./Error\";\nimport Artist from \"./Artist\";\nimport Reviews from \"./Reviews\";\n\nReactDOM.render(\n\n    <Router>\n        <Switch>\n\n            <Route exact path=\"/\">\n                <App/>\n            </Route>\n            <Route exact path=\"/showTime\">\n                <App/>\n            </Route>\n\n            <Route exact path=\"/artists\">\n                <Artist/>\n            </Route>\n\n            <Route path=\"/artists\">\n                <Reviews/>\n            </Route>\n\n            <Route path=\"/\">\n                <Error/>\n            </Route>\n\n\n\n\n\n\n        </Switch>\n    </Router>,\n\n  document.getElementById('home')\n\n);\n\n"],"sourceRoot":""}